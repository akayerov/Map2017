
Существуют по крайней мере три больших картографических сервиса:
    Yandex Map
    Google MAp
    OpenStreetMap

Первые два проекта являются коммерческими, хотя на определенных условиях
допускают свободное использование. Проект OpenStreetMap является некоммерческим,
при этом качество карт хорошее. В данном случае использование OpenStreetMap
представляется целесообразным.

                        Картографическое API
Работа с картами ведется через специальный API. Проект OpenStreetMap поддерживает
как специальный API, так и Google Map API v3, что делает использование проекта
еще более привлекательным.

                        Средства разработки
Для разработки выбрана JavaScript NodeJS и ReacJS как одна
из наиболее современных и быстро развивающихся платформ. При этом ReactJS дает
наиболее приятные условия работы пользователям. Следует отметить сложность применения
платформы NodeJS/ReactJs из-за обилия неустоявшихся конкурирующих решений.

13/01/2017 В папке C:\NodeCourse\OpenStreetMap создан проект 00-tasks-app

13/01/2017 Использование шаблона TaskList
Для убыстрения разработки используем шаблон TaskList, созданный на курсах React.
Шаблон использует более страую и сложную тезнологию Flux, поэтому первая задача -
переписать даное приложение под более современный стандарт Redux.

19.01.2017 Вариант 1 приложения 00-* c Google Maps.
Получилось: вывести карту, поставить значки
Не получилось:
Используемая библиотека не позвозволала мне сменить значок маркера на свой
ни одним из способов
Надо попробовать другую библиотеку

20.01.2017
Проверена работа аналогичных библиотек google-map(s)-react
Компонент istarkov показадся слишком сложен в использовании
Компонент google-maps-react оказался более хорошо документирован, я его использую
в проекте 01-*. Проблема с заказным изображением маркера осталась, однако выяснилось
что проблема не в компоненте , а в расположении графических файлов (статики).
Их надо положить в public папку, где собирается!!! проект, а не в исходники!!
В результате оба проекта 00-* и 01-* имеют возможность работать с своими значками

При использовании Jsx модулей необходимо обязательно указывать расширение файлаз
в import!!!

27.01.2017
Карта МО ЯО загружена из геопортала в Excel. Далее из Excel в Json. Json файл
используется для формировани я маркеров на карте проекта.
Остается вопрос можно ли Json файл менять без пересборки проекта? - т.е включается
 ли он в сборку или открыввется по мере необходимости в import.
 В данный мемоент нецелесообразно данные файлы подгружать через сеть, используя
 fetch, axios И Т.П

 30.01.2017
 Предпринята попытка иссследовать процесс построения универсального (isomorfing)
 приложения для ускорения старта программы на примере проекта в папке 0-Universe
 взятого с github с исправлением ошибок запуска.
 Исследован способ использования шаблона Mern. Использование шаблона показалось
 слишком сложным

 31.01.2017
 Попытки вывести карту в изоморном приложении не удаются
 1. Пакет react-google-map выдает множество ошибок eslint. Исправить их ВСЕ
 непосредственно в коде библиотеки нереально трудно
    Ко всему прочему ранее (00-react-google-maps) я работал с данной библиотекой,
    загружая ее не из node_modules, а из папки src/lib.
 2. Пакет google-maps.react - не для изоморфного приложения. Сервер при запуске
    ругается на отстуствие переменной window
 3. Пакет google-maps.react (istarkov) собирается, но не выводит карту. Возможно
    карту все таки вывести можно, однако непонятно, как работать со стандартными
    маркерами Google Maps
  Предложение: на время оставить работу с универсальным приложением. Продолжить
  работу с обычным одностраничным React приложением 00*. Направление работы -
  работа с данными из базы данных MongoDb ( так как описано в Mern шаблоне)

03.02.2017
В проект введен сервер на порту 3000 для доступа к базе данных.
Дял этого изменена версия babel c 5.x на 6.x в секции разарботке
  "devDependencies": {
    "autoprefixer-loader": "*",
    "axios": "^0.15.3",
    "babel": "6.x",
    "babel-loader": "6.*",
и добавлены пакеты babel в секцию запуска (как сделано в универсальном приложении)
  "dependencies": {
    "babel-core": "^6.22.1",
    "babel-plugin-transform-decorators-legacy": "^1.3.4",
    "babel-polyfill": "^6.22.0",
    "babel-preset-es2015": "^6.22.0",
    "babel-preset-react": "^6.22.0",
    "babel-preset-stage-0": "^6.22.0",
03.02.2017
Добавлен пакет mondodb для работы с соответствующей DB.
Добавлен пакет assert для тестирования (из примера MondoDB)

06.02.2017
Способ заполнения MongoDB геоданными:
XLS - > Json  http://www.freecodeformat.com/excel-json.php
Json -> MongoDb из консоли ыфпоняем импорт
mongoimport -d maps -c maps_mo <file.json>
где maps - База данных, maps_mo - коллекция

06.02.2017
Начата работа по получению данных из базы данных MongoDB

07.02.2017
Тестовый элемент (Счетчик, база Test, коллекция Counter )из MongoDb успешно получен.
Использовался пакет redux-chuhk для асинхронного Action. Использовалась библиотека
isomorphic-fetch, поскольку аналогичная axiox не захотела работать с redux.
Фиксирую изменения в коммите redux-work1

Задача отобразить длительный процесс загрузки с сервера, вывести кнопку,
вывести индикатор ожидания.
Подключаю библиотеку redux-bootstrap или material-ui. Первый вариант Material UI
(Просто нравится больше)

09.02.2017
Тестовый элемент Counter заработал, включая сообщения о возникших проблемах с
подключениями

09.02.2017
Включить элементы интерфейса Material UI  App Bar и т.п, заменив использующиеся.
Решить проблему layout с размещением блочных элементов

10.02.2017
В дизайне используются элементы Material UI: App, Drawer, Paper, MenuItem и др .
Ссылки <Link> для Router, выполненные ранее на списках ul/li заменены на <MenuItem>.
Список List из Material UI не поддерживает (?) конструкцию вида
containerElement={<Link to="/" />}

10.02.2017
Следующая задача: получить информацию (маркеры) из базы данных, используя опыт
элемента <Counter>

13.02.2017
Маркеры из базы данных MongoDB получены. Action Request и Fail еще не обрабатываюся
в Reducer-e.
Настроен Eslint, выявлена ошибка в редьюсере map-mongo-reducer, которая не давала
(предположительно) запускаться приложению.
Вкелючена обработка GET_MAP_REQUEST и GET_MAP_FAIL.

14.02.2017
Для слайдера созданы создать флаги в хранилище Redux Store - при открытиии слайдера
карта затеняется/при закрытии затемнение убирается.
Оформление данных в окне InfoView

15.02.2017
Задачи : перевести поля базы данных на латиницу, чтобы в дальнейшем не путаться.
Сложно: сделать компонент MapMongoDb базовым, который отображает данные карты,
руководствуясь параметрами (функция обработки маркетов getInitialMarkers,
элемент - отображение Infoview).
В базе данных кроме кооринатат маркера д.б. номер значка (полное имя файла?)

16.02.2017
Компонент MapMongoDb отображает теперь различные маркеры и инфовью из базы данных
В качестке параметра получает id карты, функции обработки маркеров и вывода инфоокон.
В функции обработки маркеров вроде getInitialMarkers встаиваются определения
вида значков

16.02.2017 Направление работ. Использование тем Material UI
Для компонента GoogleMap найден параметр options , кроме описанного в документации
Позволяет передать в параметре стиль карты. defaultOptions - делает то же самое, но
тольк один раз при монтировании компонента
Пример
options={{ styles: props.styleMap }}
defaultOptions={{ styles: props.styleMap }}
